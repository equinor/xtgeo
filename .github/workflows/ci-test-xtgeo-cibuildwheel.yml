name: cibuildwheel

on:
  pull_request:
    branches: [master, "*postfix"]
  release:
    types: [created]

jobs:
  build_and_upload_with_cibw:
    name: CIBW python ${{ matrix.cibw_python }} on ${{ matrix.os.runs_on }} (${{ matrix.os.cibw_image }})
    runs-on: ${{ matrix.os.runs_on }}
    strategy:
      matrix:
        cibw_python: [cp36, cp37, cp38, cp39, cp310]
        os:
          - runs_on: ubuntu-latest
            cibw_image: manylinux_x86_64
          - runs_on: windows-latest
            cibw_image: win_amd64
          - runs_on: macos-latest
            cibw_image: macosx_x86_64
          - runs_on: ubuntu-latest
            cibw_image: manylinux_aarch64

    env:
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
      CIBW_ARCHS_LINUX: "auto aarch64"
      # pillow < 8.4 required for CIBW build
      CIBW_BEFORE_TEST: >
        pushd {project} &&
        pip install "pillow<8.4.0"
        pip install -r requirements/requirements_test.txt &&
        git clone --depth 1 https://github.com/equinor/xtgeo-testdata ../xtgeo-testdata
      # Ignore forking tests as they do not work well with CIBW
      # ignore tests/test_well due to missing pytables wheel
      CIBW_TEST_COMMAND: >
        pushd {project} &&
        pytest  --disable-warnings -x -m "not hypothesis" --ignore tests/test_well --ignore-glob="*forks.py"
      CIBW_BUILD: ${{ matrix.cibw_python }}-${{ matrix.os.cibw_image }}

      # Need to skip testing for 3.10 on linux and macosx due to technical trouble with one or more
      # requirements (notably h5py) in the machine setup. But all tests w/ req. works in general
      # testing; cf. test.yml
      CIBW_TEST_SKIP: "cp310*linux* cp310*macos*"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Set up QEMU
        if: ${{ matrix.os.cibw_image == 'manylinux_aarch64' }}
        uses: docker/setup-qemu-action@v1

      - name: Install cibuildwheel
        run: >
          python -m pip install pip -U &&
          python -m pip install wheel &&
          python -m pip install cibuildwheel
      - name: Run cibuildwheel for Linux AArch64
        if: ${{ matrix.os.cibw_image == 'manylinux_aarch64' }}
        env:
          CIBW_BEFORE_TEST_LINUX: >
            pushd {project} &&
            pip install "pillow<8.4.0" &&
            pip install -r requirements/requirements_test.txt &&
            git clone --depth 1 https://github.com/equinor/xtgeo-testdata ../xtgeo-testdata &&
            yum install -y epel-release &&
            yum-config-manager --enable epel &&
            yum install -y geos-devel hdf5-devel
        run: python -m cibuildwheel --output-dir wheelhouse
      - name: Run cibuildwheel
        if: ${{ matrix.os.cibw_image != 'manylinux_aarch64' }}
        run: python -m cibuildwheel --output-dir wheelhouse
      - name: Publish
        if: ${{ github.event_name == 'release' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_SECRET }}
        run: >
          pip install twine &&
          twine upload wheelhouse/*
